drop table if exists user_role;
drop table if exists vote;
drop table if exists users;
drop table if exists meal;
drop table if exists restaurant;
create table users (
  id int not null generated by default as identity,
  name varchar not null,
  email varchar not null,
  password varchar not null,
  registered timestamp not null default current_timestamp,
  enabled boolean not null default true,
  primary key (id)
);
create unique index users_unique_email_idx on users(email);
create table user_role (
  user_id int not null,
  role varchar not null,
  constraint user_roles_idx
    unique (user_id, role),
  foreign key (user_id)
  references users (id) on delete cascade
);
create table restaurant (
  id int not null generated by default as identity,
  name varchar not null,
  primary key (id)
);
create table meal (
  id int not null generated by default as identity,
  name varchar not null,
  restaurant_id int not null,
  dt date not null default cast(current_timestamp as date),
  primary key (id),
  foreign key (restaurant_id)
  references restaurant (id) on delete cascade
);
create table vote (
  id int not null generated by default as identity,
  user_id int not null,
  dt date not null default cast(current_timestamp as date),
  tm time not null default cast(current_timestamp as time),
  restaurant_id int not null,
  primary key (id),
  foreign key (user_id)
  references users (id) on delete cascade,
  foreign key (restaurant_id)
  references restaurant (id) on delete cascade
);
create unique index votes_unique_user_datetime_idx on vote(user_id, dt);