DROP TABLE IF EXISTS user_role;
DROP TABLE IF EXISTS vote;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS meal;
DROP TABLE IF EXISTS restaurant;

CREATE TABLE users
(
    id               INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name             VARCHAR                           NOT NULL,
    email            VARCHAR                           NOT NULL,
    password         VARCHAR                           NOT NULL,
    registered       TIMESTAMP           DEFAULT now() NOT NULL,
    enabled          BOOL                DEFAULT TRUE  NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON users (email);

CREATE TABLE user_role
(
    user_id INTEGER NOT NULL,
    role    VARCHAR NOT NULL,
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE restaurant
(
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name          VARCHAR NOT NULL
);

CREATE TABLE meal
(
    id            INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name          VARCHAR                                           NOT NULL,
    restaurant_id INTEGER                                           NOT NULL,
    dt            DATE                DEFAULT CAST( now() AS Date ) NOT NULL,
    FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) ON DELETE CASCADE
);

CREATE TABLE vote
(
    id            INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id       INTEGER                                               NOT NULL,
    dt            DATE                DEFAULT CAST( now() AS Date ) NOT NULL,
    tm            TIME                DEFAULT CAST( now() AS Time ) NOT NULL,
    restaurant_id INTEGER                                               NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX votes_unique_user_datetime_idx ON vote (user_id, dt);
